@using System.Net
@using Newtonsoft.Json
@using nuelranks.pustalorc.xyz.JSON_Classes
@{
    var tournament = (Tournament) ViewBag.Tournament;
    ViewData["Title"] = "The Nuel " + tournament.FriendlyName + " Ranks";
}

<div class="text-center">
    @{
        switch (tournament.TournamentType)
        {
            case ETournamentType.League:
                <h1 class="display-4"><a href="https://tournaments.thenuel.com/tournaments/league-of-legends-university-series-south-winter-2019">The Nuel @tournament.FriendlyName</a> Ranks</h1>
                break;
            case ETournamentType.Rainbow6:
                <h1 class="display-4"><a href="https://tournaments.thenuel.com/tournaments/rainbow-six-siege-university-league-winter-2019">The Nuel @tournament.FriendlyName</a> Ranks</h1>
                break;
        }
    }
    <br/>
    @{
        using (var web = new WebClient())
        {
            switch (tournament.TournamentType)
            {
                case ETournamentType.League:
                    var leagueTeams = JsonConvert.DeserializeObject<List<LeagueOfLegendsTeam>>(web.DownloadString("https://api.pustalorc.xyz/NuelTeams/LeagueOfLegends"));
                    <div class="container">
                        <div class="row">
                            @{
                    foreach (var team in leagueTeams.Where(k => k.TournamentName.Equals(tournament.TournamentName, StringComparison.InvariantCultureIgnoreCase)))
                    {
                        <div class="col">
                            @{
                                var captain = team?.Members?.FirstOrDefault(k => k.IsCaptain)?.ProfileIconId ?? 0;
                                var image = $"http://ddragon.leagueoflegends.com/cdn/9.20.1/img/profileicon/{captain}.png";
                                var rankUrl = $"https://opgg-static.akamaized.net/images/medals/{team.AverageRank.ToLower()}.png";

                                <a href="/@tournament.TournamentName/@team.Id">
                                    <img class="player-image" src="@image" alt="@team.Name"/>
                                </a>
                                <p>@team.Name</p>
                                <p>Team Rank: <img class="player-rank" src="@rankUrl" alt="@team.AverageRank"/></p>
                            }
                        </div>
                    }
                            }
                        </div>
                    </div>
                    break;
                case ETournamentType.Rainbow6:
                    var rainbowTeams = JsonConvert.DeserializeObject<List<RainbowSixTeam>>(web.DownloadString("https://api.pustalorc.xyz/NuelTeams/RainbowSix"));
                    <div class="container">
                        <div class="row">
                            @{
                    foreach (var team in rainbowTeams.Where(k => k.TournamentName.Equals(tournament.TournamentName, StringComparison.InvariantCultureIgnoreCase)))
                    {
                        <div class="col">
                            @{
                                var captain = team?.Members?.FirstOrDefault(k => k.IsCaptain)?.PlayerId ?? "";
                                var image = $"https://ubisoft-avatars.akamaized.net/{team.Members.Find(k => k.IsCaptain).PlayerId}/default_146_146.png";
                                if (string.IsNullOrEmpty(captain))
                                {
                                    image = "https://ubisoft-avatars.akamaized.net/73fb3e4e-bb01-4c51-8160-73c6a421c51f/default_146_146.png";
                                }

                                <a href="/@tournament.TournamentName/@team.Id">
                                    <img src="@image" alt="@team.Name"/>
                                </a>
                                <p>@team.Name</p>
                                <p>Team MMR: @team.AverageMmr</p>
                            }
                        </div>
                    }
                            }
                        </div>
                    </div>
                    break;
            }
        }
    }
</div>